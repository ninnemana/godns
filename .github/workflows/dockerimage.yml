name: Deployment

# on:
#   push:
#     branches:
#       - master
on:
  push:
    branches-ignore:
      - master

jobs:
  build:
    name: Lint
    runs-on: ubuntu-latest
    steps:
    - name: Check out code into the Go module directory
      uses: actions/checkout@master

    - name: GolangCI-Lint Action
      uses: actions-contrib/golangci-lint@v0.1.0
    
    - name: Setup go
      uses: actions/setup-go@v1
      with:
        go-version: 1.15

    - name: Get dependencies
      run: |
        go get -v -t -d ./...
    
    - run: go test ./...

  amd:
    needs:
      - build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
      with:
        version: '270.0.0'
        service_account_email: ${{ secrets.GCLOUD_EMAIL }}
        service_account_key: ${{ secrets.GCLOUD_AUTH }}

    # Configure docker to use the gcloud command-line tool as a credential helper
    - run: |
        # Set up docker to authenticate
        # via gcloud command-line tool.
        gcloud auth configure-docker
    - name: Build the Docker image
      run: |
        docker build . --file Dockerfile --tag gcr.io/ninneman-org/godns:${{ github.sha }}
        docker tag gcr.io/ninneman-org/godns:${{ github.sha }} gcr.io/ninneman-org/godns:latest
        # docker push gcr.io/ninneman-org/godns
  arm:
    needs:
      - build
    runs-on: ubuntu-latest
    env:
      DOCKER_REGISTRY: gcr.io/ninneman-org
      DOCKER_IMAGE: godns-arm
      DOCKER_TARGET_PLATFORM: linux/arm/v7
    steps:
    - uses: actions/checkout@v1

    - name: Setup Docker Buildx
      uses: crazy-max/ghaction-docker-buildx@v1
      with:
        version: latest

    - name: Prepare Variables
      if: success()
      id: prepare
      run: |
        echo ::set-output name=docker_platform::${DOCKER_TARGET_PLATFORM}
        echo ::set-output name=docker_image::${DOCKER_REGISTRY}/${DOCKER_IMAGE}

    - name: Build the Docker image
      if: success()
      id: build
      run: |
        docker buildx build \
          --platform ${{steps.prepare.outputs.docker_platform}} \
          --file Dockerfile.arm \
          --tag gcr.io/ninneman-org/godns-arm:${{ github.sha }} \
          .

    # Configure docker to use the gcloud command-line tool as a credential helper
    - uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
      with:
        version: '270.0.0'
        service_account_email: ${{ secrets.GCLOUD_EMAIL }}
        service_account_key: ${{ secrets.GCLOUD_AUTH }}

    - name: Docker Login
      if: success()
      id: login
      run: |
        # Set up docker to authenticate
        # via gcloud command-line tool.
        gcloud auth configure-docker

    - name: Tag and Push Docker Image
      if: success()
      id: push
      run: |
        docker tag ${{steps.prepare.outputs.docker_image}}:${{ github.sha }} gcr.io/ninneman-org/godns-arm:latest
        # docker push gcr.io/ninneman-org/godns-arm
